[toc]
#### 设计模式
##### 用类族模式隐藏细节
例子就是Button的init，在初始化的时候传入枚举值返回不同的对象（工厂模式）
##### 工厂模式和抽象工厂的区别
UIButton就是工厂，抽象工厂抽象程度更高，如果UIView有类似UIButton的接口，那么就是抽象工厂
##### 六大设计模式原则
- 单一职责
- 接口隔离
- 开闭原则
- 迪米特法则：最少知道，该暴露的时候暴露
- 里式替换：子类能完全替代父类，子类可以添加父类方法，但是不能改变父类行为
- 依赖倒置：上层模块不应该依赖下层
##### 使用过的设计模式
责任链：链表实现，在Alert，引导上面有用
装饰：category和swift的extension
享元：cell的复用（主要用于减少创建对象的数量，以减少内存占用和提高性能）
观察者：KVO
命令：YTK
组合：
代理
适配器
策略
门面：封装一些很复杂的东西（类似于适配器）