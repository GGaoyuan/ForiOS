[toc]
## 6.29
### GCD
#### Operation
区别：
1.GCD是C写的，轻量，写起来方便，Operation是GCD面向对象封装
2.NSOperation面向对象，所以能用KVO，对线程的控制更细，可以查看线程是否取消，结束，等状态，对于控制粒度Operation小，GCD写个顺序执行的逻辑会比operation复杂
3.很多时候只是会用到异步操作，不会有特别复杂的线程关系管理，所以苹果推崇的 且优化完善、运行快速的GCD是首选
4.对于顺序行，依赖关系的话GCD没有operation好用

#### 自旋锁与互斥锁（mutex）的区别
自旋锁和互斥锁的区别在于
自旋锁时候忙等，就是说上一个线程被锁后，当前线程不会休眠，而是不停的去检查锁是否可用，当上一个线程完事后当前线程立即执行
互斥锁是上一个线程被锁住后当前线程休眠，此时CPU会去执行其他任务。当上一个线程完成后，当前线程再被唤醒执行
优缺点：
自旋锁不会引起休眠，所以没有线程调度所以速度快，但是因为当前线程会不停检查是否解锁所以会占用CPU资源，所以自旋锁适合于那种很短时间的操作（sideTable,atomic），而不适合那种时间较长的锁。互斥锁正好反着
自旋锁：gcd信号量，atomic
互斥锁：@syncoized,pthread_mutex,NSLock,NSConditoin,NSConditionLock
#### 3
3
#### 4
4
#### 5
5
#### 6
6
#### 7
7
#### 8
8
#### 9
9
#### 10
10
#### 11
11
#### 12
12
#### 13
13
#### 14
14
#### 15
15